{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Desktop\\\\Nowy folder\\\\projekt-zespolowy\\\\frontend\\\\src\\\\components\\\\Sign\\\\Sign.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport classes from \"./Sign.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Sign = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    //console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      //console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      //console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      //console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (formIsValid) {\n      const response = await fetch(\"https://pcz-app-default-rtdb.firebaseio.com/rejestracja.json\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          UserName: emailState.value,\n          Password: passwordState.value\n        })\n      });\n      if (response.ok) {\n        console.log(\"Rejestracja pomyÅ›lna\");\n        emailState.value = \"\";\n      }\n      //console.log(emailState.value);\n      //console.log(passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail (?)\",\n        type: \"email\",\n        title: \"Wprowad\\u017A swoj\\u0105 nazw\\u0119 u\\u017Cytkownika\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler,\n        className: \"tooltip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password (?)\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(Sign, \"/r5ZoOCbcTEEhpA1mIrLdgv4kf8=\");\n_c = Sign;\nexport default Sign;\nvar _c;\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useRef","Card","Button","Input","classes","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Sign","props","_s","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailInputRef","passwordInputRef","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","response","fetch","method","headers","body","JSON","stringify","UserName","Password","ok","console","log","current","focus","className","login","children","onSubmit","ref","id","label","title","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["C:/Users/barte/Desktop/Nowy folder/projekt-zespolowy/frontend/src/components/Sign/Sign.jsx"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport Input from \"../UI/Input/Input\";\r\nimport classes from \"./Sign.module.css\";\r\n\r\nconst emailReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.includes(\"@\") };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.includes(\"@\") };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return { value: action.val, isValid: action.val.trim().length > 6 };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return { value: state.value, isValid: state.value.trim().length > 6 };\r\n  }\r\n  return { value: \"\", isValid: false };\r\n};\r\n\r\nconst Sign = (props) => {\r\n  // const [enteredEmail, setEnteredEmail] = useState('');\r\n  // const [emailIsValid, setEmailIsValid] = useState();\r\n  // const [enteredPassword, setEnteredPassword] = useState('');\r\n  // const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: \"\",\r\n    isValid: null,\r\n  });\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //console.log(\"EFFECT RUNNING\");\r\n\r\n    return () => {\r\n      //console.log(\"EFFECT CLEANUP\");\r\n    };\r\n  }, []);\r\n\r\n  const { isValid: emailIsValid } = emailState;\r\n  const { isValid: passwordIsValid } = passwordState;\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      //console.log(\"Checking form validity!\");\r\n      setFormIsValid(emailIsValid && passwordIsValid);\r\n    }, 500);\r\n\r\n    return () => {\r\n      //console.log(\"CLEANUP\");\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [emailIsValid, passwordIsValid]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\r\n\r\n    // setFormIsValid(\r\n    //   event.target.value.includes('@') && passwordState.isValid\r\n    // );\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\r\n\r\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    dispatchEmail({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchPassword({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  async function submitHandler(event) {\r\n    event.preventDefault();\r\n    if (formIsValid) {\r\n      const response = await fetch(\r\n        \"https://pcz-app-default-rtdb.firebaseio.com/rejestracja.json\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            UserName: emailState.value,\r\n            Password: passwordState.value,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        console.log(\"Rejestracja pomyÅ›lna\");\r\n        emailState.value = \"\";\r\n      }\r\n      //console.log(emailState.value);\r\n      //console.log(passwordState.value);\r\n    } else if (!emailIsValid) {\r\n      emailInputRef.current.focus();\r\n    } else {\r\n      passwordInputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <Input\r\n          ref={emailInputRef}\r\n          id=\"email\"\r\n          label=\"E-Mail (?)\"\r\n          type=\"email\"\r\n          title=\"WprowadÅº swojÄ… nazwÄ™ uÅ¼ytkownika\"\r\n          isValid={emailIsValid}\r\n          value={emailState.value}\r\n          onChange={emailChangeHandler}\r\n          onBlur={validateEmailHandler}\r\n          className=\"tooltip\"\r\n        />\r\n        <Input\r\n          ref={passwordInputRef}\r\n          id=\"password\"\r\n          label=\"Password (?)\"\r\n          type=\"password\"\r\n          isValid={passwordIsValid}\r\n          value={passwordState.value}\r\n          onChange={passwordChangeHandler}\r\n          onBlur={validatePasswordHandler}\r\n        />\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sign;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}