{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Desktop\\\\Nowy folder\\\\projekt-zespolowy\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const ctx = useContext(AuthContext);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    //console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      //console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      //console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      //console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (formIsValid) {\n      const response = await fetch(\"http://localhost:8080/api/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          UserName: emailState.value,\n          Password: passwordState.value\n        })\n      });\n      //if (response.ok) {\n      //   authCtx.onLogin(emailState.value, passwordState.value);\n      // }\n      if (response.ok) {\n        /*      try {\n          const getJWT = await fetch(\"http://localhost:8080/api/user/login\", {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer YOUR_JWT_TOKEN\", // Jeśli jest wymagane uwierzytelnienie z tokenem JWT\n            },\n          });\n           if (!getJWT.ok) {\n            throw new Error(\"Błąd sieciowy lub błąd serwera\");\n          }\n          //const data = await getJWT.json();\n        */\n        const data = await response.json(); // Parsowanie odpowiedzi JSON\n\n        // Tutaj możesz przetwarzać dane, w tym otrzymany token JWT\n        const jwtToken = data.token; // Zakładając, że token jest dostępny w polu \"jwt\" w odpowiedzi\n        console.log(\"Pobrano token JWT:\", jwtToken);\n        authCtx.onLogin(emailState.value, passwordState.value); // jezeli wszystko poszlo pomyslnie, zaloguj\n        // } catch (error) {\n        //   console.error(\"Błąd podczas pobierania tokena JWT:\", error);\n        // }\n      }\n      //console.log(emailState.value);\n      //console.log(passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  }\n  const navigate = useNavigate();\n  function submitHandler2() {\n    authCtx.onLogin(\"emailState.value\", \"passwordState.value\");\n    if (ctx.isLoggedIn) {\n      navigate(\"/home\");\n    }\n    console.log(ctx.isLoggedIn);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler2,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"7ZJVLlLtD6KudMf+h3cWTh7l+Jo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","useNavigate","Card","Button","AuthContext","Input","classes","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","ctx","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailInputRef","passwordInputRef","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","response","fetch","method","headers","body","JSON","stringify","UserName","Password","ok","data","json","jwtToken","token","console","log","onLogin","current","focus","navigate","submitHandler2","isLoggedIn","className","login","children","onSubmit","ref","id","label","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["C:/Users/barte/Desktop/Nowy folder/projekt-zespolowy/frontend/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\nimport classes from \"./Login.module.css\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const ctx = useContext(AuthContext);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    //console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      //console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      //console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      //console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (formIsValid) {\n      const response = await fetch(\"http://localhost:8080/api/user/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          UserName: emailState.value,\n          Password: passwordState.value,\n        }),\n      });\n      //if (response.ok) {\n      //   authCtx.onLogin(emailState.value, passwordState.value);\n      // }\n      if (response.ok) {\n        /*      try {\n          const getJWT = await fetch(\"http://localhost:8080/api/user/login\", {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer YOUR_JWT_TOKEN\", // Jeśli jest wymagane uwierzytelnienie z tokenem JWT\n            },\n          });\n\n          if (!getJWT.ok) {\n            throw new Error(\"Błąd sieciowy lub błąd serwera\");\n          }\n          //const data = await getJWT.json();\n       */ const data = await response.json(); // Parsowanie odpowiedzi JSON\n\n        // Tutaj możesz przetwarzać dane, w tym otrzymany token JWT\n        const jwtToken = data.token; // Zakładając, że token jest dostępny w polu \"jwt\" w odpowiedzi\n        console.log(\"Pobrano token JWT:\", jwtToken);\n\n        authCtx.onLogin(emailState.value, passwordState.value); // jezeli wszystko poszlo pomyslnie, zaloguj\n        // } catch (error) {\n        //   console.error(\"Błąd podczas pobierania tokena JWT:\", error);\n        // }\n      }\n      //console.log(emailState.value);\n      //console.log(passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  }\n\n  const navigate = useNavigate();\n\n  function submitHandler2() {\n    authCtx.onLogin(\"emailState.value\", \"passwordState.value\");\n    if (ctx.isLoggedIn) {\n      navigate(\"/home\");\n    }\n    console.log(ctx.isLoggedIn);\n  }\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler2}>\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}