{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Desktop\\\\Nowy folder\\\\projekt-zespolowy\\\\frontend\\\\src\\\\components\\\\Home\\\\Columns\\\\Columns.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Columns.css\";\nimport AddItem from \"../AddItem/AddItem\";\n//import EditForm from \"../EditForm/EditForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Columns() {\n  _s();\n  const [columns, setColumns] = useState([{\n    title: \"To do\",\n    items: []\n  }, {\n    title: \"In progress\",\n    items: []\n  }, {\n    title: \"Review\",\n    items: []\n  }, {\n    title: \"Done\",\n    items: []\n  }]);\n  const handleAddItem = (content, columnIndex) => {\n    setColumns(prevColumns => {\n      const updatedColumns = [...prevColumns];\n      const itemIndex = updatedColumns[columnIndex].items.indexOf(content);\n      //console.log(content);\n      if (itemIndex === -1) {\n        //console.log(itemIndex);\n        updatedColumns[columnIndex].items.push(content);\n      }\n      return updatedColumns;\n    });\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleOnDrop = (e, columnIndex) => {\n    const value = e.dataTransfer.getData(\"text/plain-item\");\n    const id = e.dataTransfer.getData(\"text/plain-columnindex\");\n    const parsedArray = JSON.parse(value);\n    //console.log(value + \"  \" + columnIndex + \"  \" + id);\n    //console.log(parsedArray);\n    if (+id !== +columnIndex) {\n      setColumns(prevColumns => {\n        const updatedColumns = [...prevColumns];\n        const prevColumnIndex = +id;\n\n        // Znajdź indeks elementu w poprzedniej kolumnie\n        const itemIndex = updatedColumns[prevColumnIndex].items.indexOf(parsedArray);\n        console.log(itemIndex);\n        if (itemIndex === -1) {\n          // Usuń element z poprzedniej kolumny\n          updatedColumns[prevColumnIndex].items.splice(itemIndex, 1);\n          // Dodaj element do aktualnej kolumny\n          handleAddItem(parsedArray, columnIndex);\n        }\n        return updatedColumns;\n      });\n    }\n  };\n  const editHandler = (item1, item2, item3, index, colIndex) => {\n    setEditItem({\n      item1,\n      item2,\n      item3,\n      index,\n      colIndex\n    });\n    setEditedContent1(item1);\n    setEditedContent2(item2);\n    setEditedContent3(item3);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns-container\",\n      children: columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        onDrop: e => handleOnDrop(e, columnIndex),\n        onDragOver: handleDragOver,\n        onDragStart: e => {\n          e.dataTransfer.setData(\"text/plain-columnindex\", columnIndex);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newTile\",\n          draggable: true,\n          onDragStart: e => {\n            e.dataTransfer.setData(\"text/plain-item\", JSON.stringify(item));\n            e.dataTransfer.setData(\"text/plain-index\", index);\n          },\n          children: [item[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), item[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), item[2], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editHandler(item[0], item[1], item[2], index, columnIndex),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)), \"colIdcolIdcolIdcolIdcolIdcolId\", /*#__PURE__*/_jsxDEV(AddItem, {\n          onAddItem: content => handleAddItem(content, columnIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, columnIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Columns, \"TqvNsfBGnXsJ0ZtgB3Ws5Z/gjUk=\");\n_c = Columns;\nexport default Columns;\nvar _c;\n$RefreshReg$(_c, \"Columns\");","map":{"version":3,"names":["React","useState","AddItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Columns","_s","columns","setColumns","title","items","handleAddItem","content","columnIndex","prevColumns","updatedColumns","itemIndex","indexOf","push","handleDragOver","event","preventDefault","handleOnDrop","e","value","dataTransfer","getData","id","parsedArray","JSON","parse","prevColumnIndex","console","log","splice","editHandler","item1","item2","item3","index","colIndex","setEditItem","setEditedContent1","setEditedContent2","setEditedContent3","children","className","map","column","onDrop","onDragOver","onDragStart","setData","fileName","_jsxFileName","lineNumber","columnNumber","item","draggable","stringify","onClick","onAddItem","_c","$RefreshReg$"],"sources":["C:/Users/barte/Desktop/Nowy folder/projekt-zespolowy/frontend/src/components/Home/Columns/Columns.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Columns.css\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\n//import EditForm from \"../EditForm/EditForm\";\r\n\r\nfunction Columns() {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"To do\", items: [] },\r\n    { title: \"In progress\", items: [] },\r\n    { title: \"Review\", items: [] },\r\n    { title: \"Done\", items: [] },\r\n  ]);\r\n\r\n  const handleAddItem = (content, columnIndex) => {\r\n    setColumns((prevColumns) => {\r\n      const updatedColumns = [...prevColumns];\r\n      const itemIndex = updatedColumns[columnIndex].items.indexOf(content);\r\n      //console.log(content);\r\n      if (itemIndex === -1) {\r\n        //console.log(itemIndex);\r\n        updatedColumns[columnIndex].items.push(content);\r\n      }\r\n\r\n      return updatedColumns;\r\n    });\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleOnDrop = (e, columnIndex) => {\r\n    const value = e.dataTransfer.getData(\"text/plain-item\");\r\n    const id = e.dataTransfer.getData(\"text/plain-columnindex\");\r\n    const parsedArray = JSON.parse(value);\r\n    //console.log(value + \"  \" + columnIndex + \"  \" + id);\r\n    //console.log(parsedArray);\r\n    if (+id !== +columnIndex) {\r\n      setColumns((prevColumns) => {\r\n        const updatedColumns = [...prevColumns];\r\n        const prevColumnIndex = +id;\r\n\r\n        // Znajdź indeks elementu w poprzedniej kolumnie\r\n        const itemIndex =\r\n          updatedColumns[prevColumnIndex].items.indexOf(parsedArray);\r\n\r\n        console.log(itemIndex);\r\n\r\n        if (itemIndex === -1) {\r\n          // Usuń element z poprzedniej kolumny\r\n          updatedColumns[prevColumnIndex].items.splice(itemIndex, 1);\r\n          // Dodaj element do aktualnej kolumny\r\n          handleAddItem(parsedArray, columnIndex);\r\n        }\r\n\r\n        return updatedColumns;\r\n      });\r\n    }\r\n  };\r\n\r\n  const editHandler = (item1, item2, item3, index, colIndex) => {\r\n    setEditItem({ item1, item2, item3, index, colIndex });\r\n    setEditedContent1(item1);\r\n    setEditedContent2(item2);\r\n    setEditedContent3(item3);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"columns-container\">\r\n        {columns.map((column, columnIndex) => (\r\n          <div\r\n            key={columnIndex}\r\n            className=\"column\"\r\n            onDrop={(e) => handleOnDrop(e, columnIndex)}\r\n            onDragOver={handleDragOver}\r\n            onDragStart={(e) => {\r\n              e.dataTransfer.setData(\"text/plain-columnindex\", columnIndex);\r\n            }}\r\n          >\r\n            <h2>{column.title}</h2>\r\n            {column.items.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"newTile\"\r\n                draggable\r\n                onDragStart={(e) => {\r\n                  e.dataTransfer.setData(\r\n                    \"text/plain-item\",\r\n                    JSON.stringify(item)\r\n                  );\r\n                  e.dataTransfer.setData(\"text/plain-index\", index);\r\n                }}\r\n              >\r\n                {item[0]}\r\n                <br />\r\n                {item[1]}\r\n                <br />\r\n                {item[2]}\r\n                <br />\r\n                <button\r\n                  onClick={() =>\r\n                    editHandler(item[0], item[1], item[2], index, columnIndex)\r\n                  }\r\n                >\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            ))}\r\n            colIdcolIdcolIdcolIdcolIdcolId\r\n            <AddItem\r\n              onAddItem={(content) => handleAddItem(content, columnIndex)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Columns;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}