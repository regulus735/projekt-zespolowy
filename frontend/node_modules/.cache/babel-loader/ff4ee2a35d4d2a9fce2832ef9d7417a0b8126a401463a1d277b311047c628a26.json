{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Desktop\\\\Nowy folder\\\\projekt-zespolowy\\\\frontend\\\\src\\\\components\\\\Home\\\\Columns\\\\Columns.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Columns.css\";\nimport AddItem from \"../AddItem/AddItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Columns() {\n  _s();\n  const [columns, setColumns] = useState([{\n    title: \"To do\",\n    items: []\n  }, {\n    title: \"In progress\",\n    items: []\n  }, {\n    title: \"Review\",\n    items: []\n  }, {\n    title: \"Done\",\n    items: []\n  }]);\n  const handleAddItem = (content, columnIndex) => {\n    setColumns(prevColumns => {\n      const updatedColumns = [...prevColumns];\n      updatedColumns[columnIndex].items.push(content);\n      return updatedColumns;\n    });\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleOnDrop = (e, columnIndex) => {\n    const value = e.dataTransfer.getData(\"text/plain-item\");\n    const id = e.dataTransfer.getData(\"text/plain-columnindex\");\n    console.log(value + \"  \" + columnIndex + \"  \" + id);\n    if (+id !== +columnIndex) {\n      setColumns(prevColumns => {\n        const updatedColumns = [...prevColumns];\n        const prevColumnIndex = +id;\n\n        // Znajdź indeks elementu w poprzedniej kolumnie\n        const itemIndex = updatedColumns[prevColumnIndex].items.indexOf(value);\n        if (itemIndex !== -1) {\n          // Usuń element z poprzedniej kolumny\n          updatedColumns[prevColumnIndex].items.splice(itemIndex, 1);\n          // Dodaj element do aktualnej kolumny\n          handleAddItem(value, columnIndex);\n        }\n        return updatedColumns;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns-container\",\n    children: columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      onDrop: e => handleOnDrop(e, columnIndex),\n      onDragOver: handleDragOver,\n      onDragStart: e => {\n        e.dataTransfer.setData(\"text/plain-columnindex\", columnIndex);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), column.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newTile\",\n        draggable: true,\n        onDragStart: e => {\n          e.dataTransfer.setData(\"text/plain-item\", item);\n          e.dataTransfer.setData(\"text/plain-index\", index);\n        },\n        onDragEnd: e => {\n          //handleRemoveItem(item, index);\n        },\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(AddItem, {\n        onAddItem: content => handleAddItem(content, columnIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, columnIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Columns, \"TqvNsfBGnXsJ0ZtgB3Ws5Z/gjUk=\");\n_c = Columns;\nexport default Columns;\nvar _c;\n$RefreshReg$(_c, \"Columns\");","map":{"version":3,"names":["React","useState","AddItem","jsxDEV","_jsxDEV","Columns","_s","columns","setColumns","title","items","handleAddItem","content","columnIndex","prevColumns","updatedColumns","push","handleDragOver","event","preventDefault","handleOnDrop","e","value","dataTransfer","getData","id","console","log","prevColumnIndex","itemIndex","indexOf","splice","className","children","map","column","onDrop","onDragOver","onDragStart","setData","fileName","_jsxFileName","lineNumber","columnNumber","item","index","draggable","onDragEnd","onAddItem","_c","$RefreshReg$"],"sources":["C:/Users/barte/Desktop/Nowy folder/projekt-zespolowy/frontend/src/components/Home/Columns/Columns.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Columns.css\";\r\nimport AddItem from \"../AddItem/AddItem\";\r\n\r\nfunction Columns() {\r\n  const [columns, setColumns] = useState([\r\n    { title: \"To do\", items: [] },\r\n    { title: \"In progress\", items: [] },\r\n    { title: \"Review\", items: [] },\r\n    { title: \"Done\", items: [] },\r\n  ]);\r\n\r\n  const handleAddItem = (content, columnIndex) => {\r\n    setColumns((prevColumns) => {\r\n      const updatedColumns = [...prevColumns];\r\n      updatedColumns[columnIndex].items.push(content);\r\n      return updatedColumns;\r\n    });\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleOnDrop = (e, columnIndex) => {\r\n    const value = e.dataTransfer.getData(\"text/plain-item\");\r\n    const id = e.dataTransfer.getData(\"text/plain-columnindex\");\r\n    console.log(value + \"  \" + columnIndex + \"  \" + id);\r\n    if (+id !== +columnIndex) {\r\n      setColumns((prevColumns) => {\r\n        const updatedColumns = [...prevColumns];\r\n        const prevColumnIndex = +id;\r\n\r\n        // Znajdź indeks elementu w poprzedniej kolumnie\r\n        const itemIndex = updatedColumns[prevColumnIndex].items.indexOf(value);\r\n\r\n        if (itemIndex !== -1) {\r\n          // Usuń element z poprzedniej kolumny\r\n          updatedColumns[prevColumnIndex].items.splice(itemIndex, 1);\r\n          // Dodaj element do aktualnej kolumny\r\n          handleAddItem(value, columnIndex);\r\n        }\r\n\r\n        return updatedColumns;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"columns-container\">\r\n      {columns.map((column, columnIndex) => (\r\n        <div\r\n          key={columnIndex}\r\n          className=\"column\"\r\n          onDrop={(e) => handleOnDrop(e, columnIndex)}\r\n          onDragOver={handleDragOver}\r\n          onDragStart={(e) => {\r\n            e.dataTransfer.setData(\"text/plain-columnindex\", columnIndex);\r\n          }}\r\n        >\r\n          <h2>{column.title}</h2>\r\n\r\n          {column.items.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"newTile\"\r\n              draggable\r\n              onDragStart={(e) => {\r\n                e.dataTransfer.setData(\"text/plain-item\", item);\r\n                e.dataTransfer.setData(\"text/plain-index\", index);\r\n              }}\r\n              onDragEnd={(e) => {\r\n                //handleRemoveItem(item, index);\r\n              }}\r\n            >\r\n              {item}\r\n            </div>\r\n          ))}\r\n\r\n          <AddItem\r\n            onAddItem={(content) => handleAddItem(content, columnIndex)}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Columns;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}